// index.jsx
import React, { useEffect, useState } from "react";
import { View, Text, FlatList, TouchableOpacity, ScrollView } from "react-native";
import SearchBar from "@/app/Components/SearchBar";
import ExerciseDetails from "@/app/Components/ExerciseDetails";
import exercisesData from "@/assets/exercises.json";

const Exercise = () => {
  const [query, setQuery] = useState("");
  const [selectedExercise, setSelectedExercise] = useState(null);
  const [filteredExercises, setFilteredExercises] = useState([]);

  useEffect(() => {
    const results = exercisesData.filter((exercise) =>
      exercise.name.toLowerCase().includes(query.toLowerCase())
    );
    setFilteredExercises(results);
  }, [query]);

  return (
   <React.Fragment key={Math.random()}>
  
      {selectedExercise ? (
        <>
            <ScrollView className="flex-1 bg-gray-100 p-4">
            <TouchableOpacity
            className="mt-4 bg-red-500 py-2 px-4 rounded-2xl "
            onPress={() => setSelectedExercise(null)}
          >
            <Text className="text-white text-center">{'<-- Back to list'}</Text>
          </TouchableOpacity>
            {/* <Text className="text-xl font-bold mb-2">{selectedExercise.name}</Text> */}
          <ExerciseDetails exercise={selectedExercise} />
          
            </ScrollView>
        </>
      ) : (
        <View className="flex-1 bg-gray-100 p-4">
      <SearchBar query={query} setQuery={setQuery} />
        <FlatList
          data={filteredExercises}
          keyExtractor={(item) => item.id}
          renderItem={({ item }) => (
            <TouchableOpacity
              onPress={() => setSelectedExercise(item)}
              className="bg-white p-4 mb-2 rounded-2xl shadow"
            >
              <Text className="text-lg font-semibold">{item.name}</Text>
              <Text className="text-sm text-gray-500">
                {item.primaryMuscles.join(", ")}
              </Text>
            </TouchableOpacity>
          )}
        />
        </View>
      )}
   </React.Fragment>
  );
  
};

export default Exercise;
